#!/usr/bin/env python
# coding: utf-8

# # Q#1: Multiples of 3 or 5
# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.

# In[24]:


def findMultiples():
    threshold=1000
    sum=0
    l=[]
    i=1
    threshold=threshold-1
    while threshold:
        if threshold%3==0 or threshold%5==0:
            l.append(threshold)
            sum=sum+threshold
        else:
            i=i+1
        threshold=threshold-1
    print(l)
    print(sum)
findMultiples()


# # Q#2: Even Fibonacci numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# In[23]:


def calcFib(n_terms):
    l=[]
    fib_1=1
    fib_2=2
    sum=0
    if n_terms==1:
        print(fib_1)
    else:
        l.append(fib_1)
        l.append(fib_2)
        for i in range(3,n_terms):
            nth=fib_1+fib_2
            fib_1=fib_2
            fib_2=nth
            if nth<4000000 and nth%2==0:
                l.append(nth)
        print(l)
    for i in l:
#         print(i)
        sum=sum+i
    print(sum)
calcFib(50)    


# # Q#3: Largest prime factor
# The prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of the number 600851475143 

# In[41]:


import math
def primeFactor(n):
    l=[]
    while n%2==0:
        print(2)
        n=n/2
    for i in range(3,n):
        while n%i==0:
            l.append(i)
            n=float(n/i)
        i=i+2
    print(l)
primeFactor(3)


# In[ ]:




